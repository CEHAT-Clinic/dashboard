{
  "extends": [
    "./node_modules/gts/",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "react-app"
  ],
  "rules": {
    "prettier/prettier": [
      "warn", 
      {
        "endOfLine":"auto"
      }
    ],
    "tsdoc/syntax": "warn",
    "capitalized-comments": [
      "warn",
      "always",
      {
        "ignoreConsecutiveComments": true,
        "ignoreInlineComments": true
      }
    ],
    "spaced-comment": [
      "warn",
      "always",
      {
        "line": {
          "markers": ["/"],
          "exceptions": ["-", "+"]
        },
        "block": {
          "markers": ["!"],
          "exceptions": ["*"],
          "balanced": true
        }
      }
    ],
    "require-atomic-updates": "error",
    "no-console": "warn",
    "default-case": "warn",
    "default-case-last": "warn",
    "default-param-last": "warn",
    "class-methods-use-this": "warn",
    "eqeqeq": "error",
    "no-magic-numbers": [
      "warn",
      {
        "ignoreArrayIndexes": true,
        "ignore": [0,1]
      }
    ],
    "no-multi-spaces": "warn",
    "require-await": "error",
    "camelcase": "warn",
    "eol-last": "error",
    "sort-vars": "warn",
    "spellcheck/spell-checker": [
      "warn",
      {
        "skipWordIfMatch": [
          "sunday",
          "85vh",
          "las",
          "dx",
          "dy",
          "aqi",
          "3vh",
          "Figma",
          "Aqi",
          "Svg",
          "evt",
          "pointerenter",
          "pointerleave",
          "mb",
          "resize",
          "Resize",
          "mapevents",
          "mapsettings",
          "cehat",
          "dom",
          "firebase",
          "Firebase",
          "firestore",
          "Firestore",
          "localhost",
          "Localhost",
          "href",
          "unregister",
          "javascript",
          "svg",
          "geo",
          "Rect",
          "Unmount",
          "matchers",
          "Chakra",
          "sg",
          "uid",
          "Reauthentication",
          "reauthentication",
          "reauthenticate",
          "webworker",
          "globals",
          "Workbox",
          "Revalidate",
          "Precache",
          "precache",
          "precached",
          "pathname",
          "onupdatefound",
          "onstatechange",
          "Unregisters",
          "xl",
          "Thead",
          "Td",
          "Tbody",
          "Lngs",
          "Idioma",
          "Unordered",
          "unstyled",
          "instagram",
          "subcollection",
          "csv",
          "num",
          "axios",
          "Axios",
          "camelcase",
          "monday",
          "tuesday",
          "wednesday",
          "thursday",
          "friday",
          "saturday",
          "sunday",
          "Epa",
          "Checkbox",
          "jan",
          "feb",
          "apr",
          "jul",
          "aug",
          "sep",
          "oct",
          "nov",
          "dec",
          "Checkbox",
          "Merriweather",
          "semibold",
          "booleans",
          "Subcollection",
          "Reauthenticate",
          "reauthenticating",
          "Reauthenticated",
          "Fi",
          "Unlink",
          "unlink",
          "Unlinks",
          "unlinks"
        ],
        "skipWords": [
          "Pv"
        ]
      }
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error"
  },
  "env": {
    "browser": true,
    "node": true,
    "jest": true,
    "serviceworker": true
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "tsdoc",
    "spellcheck"
  ],
  "settings": {
    "react": {
      "createClass": "createReactClass", // Regex for Component Factory to use,
                                         // default to "createReactClass"
      "pragma": "React",  // Pragma to use, default to "React"
      "fragment": "Fragment",  // Fragment to use (may be a property of <pragma>), default to "Fragment"
      "version": "detect", // React version. "detect" automatically picks the version you have installed.
                           // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
                           // default to latest and warns if missing
                           // It will default to "detect" in the future
      "flowVersion": "0.53" // Flow version
    },
    "propWrapperFunctions": [
        // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
        "forbidExtraProps",
        {"property": "freeze", "object": "Object"},
        {"property": "myFavoriteWrapper"}
    ],
    "linkComponents": [
      // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
      "Hyperlink",
      {"name": "Link", "linkAttribute": "to"}
    ]
  }
}